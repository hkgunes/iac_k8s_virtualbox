---
- name: set vm hostname | K8S Prepare
  shell: |
    hostnamectl set-hostname "{{ hostname }}.kb.local"  && \
    {{ interfaces.ip_address }} {{ hostname }}.kb.local {{ hostname }} && \
    echo "{{ interfaces.ip_address }}  {{ hostname }}.kb.local {{ hostname }}" >> /etc/hosts
  register: command_result  # Register the output in this variable
  ignore_errors: yes

- name: Print stdout
  debug:
    var: command_result.stdout

- name: disable swapp | K8S Prepare
  shell: |
    swapoff -a && \
    sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab

- name: K8S Copy containerd.conf | Install Containerd Run time  | K8S Prepare
  template:
    src: "containerd.conf"
    dest: /etc/modules-load.d/containerd.conf

- name: Install Containerd Run time | K8S Prepare
  shell: |
    modprobe overlay && \
    modprobe br_netfilter

- name: K8S Copy 99-kubernetes-k8s.conf | Install Containerd Run time  | K8S Prepare
  template:
    src: "99-kubernetes-k8s.conf"
    dest: /etc/sysctl.d/99-kubernetes-k8s.conf

- name: Install Containerd Run time | K8S Prepare
  shell: |
    sysctl --system && \
    apt update && \
    apt -y install containerd && \
    containerd config default | sudo tee /etc/containerd/config.toml >/dev/null 2>&1

- name: K8S remove config.toml |Install Containerd Run time | K8S Prepare
  shell: rm -rf /etc/containerd/config.toml

- name: K8S Copy config.toml | Install Containerd Run time  | K8S Prepare
  template:
    src: "config.toml"
    dest: /etc/containerd/config.toml

- name: containerd restart| Install Containerd Run time | K8S Prepare
  shell: |
    systemctl restart containerd && \
    systemctl enable containerd

- name: Add Kubernetes Apt Repository | K8S Prepare
  shell: |
    sudo apt install gnupg gnupg2 curl software-properties-common -y && \
    curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo gpg --dearmour -o /etc/apt/trusted.gpg.d/cgoogle.gpg && \
    sudo apt-add-repository "deb http://apt.kubernetes.io/ kubernetes-xenial main"






